// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payload.proto

/*
Package schema is a generated protocol buffer package.

It is generated from these files:
	payload.proto
	state.proto

It has these top-level messages:
	CommercialPaperKey
	IssueCommercialPaper
	BuyCommercialPaper
	RedeemCommercialPaper
	CommercialPaper
	CommercialPaperId
*/
package schema

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CommercialPaperKey struct {
	Issuer      string `protobuf:"bytes,1,opt,name=issuer" json:"issuer,omitempty"`
	PaperNumber string `protobuf:"bytes,2,opt,name=paper_number,json=paperNumber" json:"paper_number,omitempty"`
}

func (m *CommercialPaperKey) Reset()                    { *m = CommercialPaperKey{} }
func (m *CommercialPaperKey) String() string            { return proto.CompactTextString(m) }
func (*CommercialPaperKey) ProtoMessage()               {}
func (*CommercialPaperKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CommercialPaperKey) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *CommercialPaperKey) GetPaperNumber() string {
	if m != nil {
		return m.PaperNumber
	}
	return ""
}

type IssueCommercialPaper struct {
	Issuer       string                     `protobuf:"bytes,1,opt,name=issuer" json:"issuer,omitempty"`
	PaperNumber  string                     `protobuf:"bytes,2,opt,name=paper_number,json=paperNumber" json:"paper_number,omitempty"`
	IssueDate    *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=issue_date,json=issueDate" json:"issue_date,omitempty"`
	MaturityDate *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=maturity_date,json=maturityDate" json:"maturity_date,omitempty"`
	FaceValue    int32                      `protobuf:"varint,5,opt,name=face_value,json=faceValue" json:"face_value,omitempty"`
}

func (m *IssueCommercialPaper) Reset()                    { *m = IssueCommercialPaper{} }
func (m *IssueCommercialPaper) String() string            { return proto.CompactTextString(m) }
func (*IssueCommercialPaper) ProtoMessage()               {}
func (*IssueCommercialPaper) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IssueCommercialPaper) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *IssueCommercialPaper) GetPaperNumber() string {
	if m != nil {
		return m.PaperNumber
	}
	return ""
}

func (m *IssueCommercialPaper) GetIssueDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.IssueDate
	}
	return nil
}

func (m *IssueCommercialPaper) GetMaturityDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.MaturityDate
	}
	return nil
}

func (m *IssueCommercialPaper) GetFaceValue() int32 {
	if m != nil {
		return m.FaceValue
	}
	return 0
}

type BuyCommercialPaper struct {
	Issuer       string                     `protobuf:"bytes,1,opt,name=issuer" json:"issuer,omitempty"`
	PaperNumber  string                     `protobuf:"bytes,2,opt,name=paper_number,json=paperNumber" json:"paper_number,omitempty"`
	CurrentOwner string                     `protobuf:"bytes,3,opt,name=current_owner,json=currentOwner" json:"current_owner,omitempty"`
	NewOwner     string                     `protobuf:"bytes,4,opt,name=new_owner,json=newOwner" json:"new_owner,omitempty"`
	Price        int32                      `protobuf:"varint,5,opt,name=price" json:"price,omitempty"`
	PurchaseDate *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=purchase_date,json=purchaseDate" json:"purchase_date,omitempty"`
}

func (m *BuyCommercialPaper) Reset()                    { *m = BuyCommercialPaper{} }
func (m *BuyCommercialPaper) String() string            { return proto.CompactTextString(m) }
func (*BuyCommercialPaper) ProtoMessage()               {}
func (*BuyCommercialPaper) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BuyCommercialPaper) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *BuyCommercialPaper) GetPaperNumber() string {
	if m != nil {
		return m.PaperNumber
	}
	return ""
}

func (m *BuyCommercialPaper) GetCurrentOwner() string {
	if m != nil {
		return m.CurrentOwner
	}
	return ""
}

func (m *BuyCommercialPaper) GetNewOwner() string {
	if m != nil {
		return m.NewOwner
	}
	return ""
}

func (m *BuyCommercialPaper) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *BuyCommercialPaper) GetPurchaseDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.PurchaseDate
	}
	return nil
}

type RedeemCommercialPaper struct {
	Issuer         string                     `protobuf:"bytes,1,opt,name=issuer" json:"issuer,omitempty"`
	PaperNumber    string                     `protobuf:"bytes,2,opt,name=paper_number,json=paperNumber" json:"paper_number,omitempty"`
	RedeemingOwner string                     `protobuf:"bytes,3,opt,name=redeeming_owner,json=redeemingOwner" json:"redeeming_owner,omitempty"`
	RedeemDate     *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=redeem_date,json=redeemDate" json:"redeem_date,omitempty"`
}

func (m *RedeemCommercialPaper) Reset()                    { *m = RedeemCommercialPaper{} }
func (m *RedeemCommercialPaper) String() string            { return proto.CompactTextString(m) }
func (*RedeemCommercialPaper) ProtoMessage()               {}
func (*RedeemCommercialPaper) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RedeemCommercialPaper) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *RedeemCommercialPaper) GetPaperNumber() string {
	if m != nil {
		return m.PaperNumber
	}
	return ""
}

func (m *RedeemCommercialPaper) GetRedeemingOwner() string {
	if m != nil {
		return m.RedeemingOwner
	}
	return ""
}

func (m *RedeemCommercialPaper) GetRedeemDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.RedeemDate
	}
	return nil
}

func init() {
	proto.RegisterType((*CommercialPaperKey)(nil), "schema.CommercialPaperKey")
	proto.RegisterType((*IssueCommercialPaper)(nil), "schema.IssueCommercialPaper")
	proto.RegisterType((*BuyCommercialPaper)(nil), "schema.BuyCommercialPaper")
	proto.RegisterType((*RedeemCommercialPaper)(nil), "schema.RedeemCommercialPaper")
}

func init() { proto.RegisterFile("payload.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0x41, 0x4b, 0xeb, 0x40,
	0x10, 0xc7, 0xc9, 0x7b, 0x6d, 0x78, 0x99, 0xb6, 0xef, 0xc1, 0xd2, 0x27, 0xa1, 0x22, 0xd6, 0x78,
	0xb0, 0xa7, 0x14, 0xf4, 0x24, 0x1e, 0x04, 0xf5, 0x22, 0x82, 0x95, 0x20, 0x5e, 0xc3, 0x36, 0x9d,
	0xb6, 0x81, 0x6c, 0x76, 0xd9, 0xec, 0x5a, 0xf2, 0xcd, 0xfc, 0x48, 0x1e, 0xfc, 0x10, 0xb2, 0xbb,
	0x89, 0xa0, 0x97, 0x0a, 0xf6, 0xb8, 0xbf, 0xf9, 0xcf, 0x30, 0xbf, 0x59, 0x18, 0x08, 0x5a, 0x17,
	0x9c, 0x2e, 0x62, 0x21, 0xb9, 0xe2, 0xc4, 0xaf, 0xb2, 0x35, 0x32, 0x3a, 0x3a, 0x5c, 0x71, 0xbe,
	0x2a, 0x70, 0x6a, 0xe9, 0x5c, 0x2f, 0xa7, 0x2a, 0x67, 0x58, 0x29, 0xca, 0x84, 0x0b, 0x46, 0x33,
	0x20, 0xd7, 0x9c, 0x31, 0x94, 0x59, 0x4e, 0x8b, 0x07, 0x2a, 0x50, 0xde, 0x61, 0x4d, 0xf6, 0xc0,
	0xcf, 0xab, 0x4a, 0xa3, 0x0c, 0xbd, 0xb1, 0x37, 0x09, 0x92, 0xe6, 0x45, 0x8e, 0xa0, 0x2f, 0x4c,
	0x26, 0x2d, 0x35, 0x9b, 0xa3, 0x0c, 0x7f, 0xd9, 0x6a, 0xcf, 0xb2, 0x7b, 0x8b, 0xa2, 0x37, 0x0f,
	0x86, 0xb7, 0x26, 0xfd, 0x65, 0xec, 0x0f, 0x66, 0x92, 0x73, 0x00, 0x1b, 0x4e, 0x17, 0x54, 0x61,
	0xf8, 0x7b, 0xec, 0x4d, 0x7a, 0xa7, 0xa3, 0xd8, 0xa9, 0xc5, 0xad, 0x5a, 0xfc, 0xd8, 0xaa, 0x25,
	0x81, 0x4d, 0xdf, 0x50, 0x85, 0xe4, 0x12, 0x06, 0x8c, 0x2a, 0x2d, 0x73, 0x55, 0xbb, 0xee, 0xce,
	0xd6, 0xee, 0x7e, 0xdb, 0x60, 0x07, 0x1c, 0x00, 0x2c, 0x69, 0x86, 0xe9, 0x33, 0x2d, 0x34, 0x86,
	0xdd, 0xb1, 0x37, 0xe9, 0x26, 0x81, 0x21, 0x4f, 0x06, 0x44, 0xaf, 0x1e, 0x90, 0x2b, 0x5d, 0xef,
	0x50, 0xf6, 0x18, 0x06, 0x99, 0x96, 0x12, 0x4b, 0x95, 0xf2, 0x4d, 0x89, 0xd2, 0xfa, 0x06, 0x49,
	0xbf, 0x81, 0x33, 0xc3, 0xc8, 0x3e, 0x04, 0x25, 0x6e, 0x9a, 0x40, 0xc7, 0x06, 0xfe, 0x94, 0xb8,
	0x71, 0xc5, 0x21, 0x74, 0x85, 0xcc, 0xb3, 0x76, 0x5b, 0xf7, 0x30, 0x97, 0x10, 0x5a, 0x66, 0x6b,
	0x5a, 0x35, 0x77, 0xf4, 0xb7, 0x5f, 0xa2, 0x6d, 0x30, 0x97, 0x88, 0x5e, 0x3c, 0xf8, 0x9f, 0xe0,
	0x02, 0x91, 0xed, 0xd0, 0xf6, 0x04, 0xfe, 0x49, 0x3b, 0x33, 0x2f, 0x57, 0x9f, 0x7c, 0xff, 0x7e,
	0x60, 0x27, 0x75, 0x01, 0x3d, 0x47, 0xbe, 0xfb, 0x8d, 0xe0, 0xe2, 0x66, 0xf5, 0xb9, 0x6f, 0xeb,
	0x67, 0xef, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd2, 0xdd, 0x66, 0xb6, 0x26, 0x03, 0x00, 0x00,
}
